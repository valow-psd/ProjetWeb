{"ast":null,"code":"import { mapActions, mapState } from \"vuex\";\nexport default {\n  name: 'HeroesComponents',\n  data: () => ({\n    columns: [\"publicName\"],\n    items: {},\n    heroPublicName: \"\",\n    headers: [{\n      text: \"ID\",\n      value: \"_id\"\n    }, {\n      text: \"Nom\",\n      value: \"name\"\n    }],\n    heroRealName: \"\",\n    display_button: false,\n    heroPublicNameRules: [v => !!v || \"Un nom public de héro est requis\"],\n    heroRealNameRules: [v => !!v || \"Un nom réel de héro est requis\"]\n  }),\n  methods: {\n    ...mapActions([\"getListeHero\", \"registerHero\"]),\n    async creeNouveauHero() {\n      const hero = {\n        publicName: this.heroPublicName,\n        realName: this.heroRealName\n      };\n      await this.registerHero(hero);\n      console.log(\"envoie2\");\n    }\n  },\n  computed: {\n    ...mapState([\"heroes\"])\n  },\n  mounted() {\n    this.getListeHero();\n    //console.log(this.nomOrga , \"totot\")\n  }\n};","map":{"version":3,"names":["mapActions","mapState","name","data","columns","items","heroPublicName","headers","text","value","heroRealName","display_button","heroPublicNameRules","v","heroRealNameRules","methods","creeNouveauHero","hero","publicName","realName","registerHero","console","log","computed","mounted","getListeHero"],"sources":["src/components/HeroesComponent.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-app-bar>\r\n      <v-app-bar-title>\r\n        <p>Heroes</p>\r\n      </v-app-bar-title>\r\n    </v-app-bar>\r\n    <br>\r\n    <br>\r\n    <v-btn variant=\"tonal\" @click=\" display_button = !display_button\">\r\n      Ajouter un nouvel héro\r\n    </v-btn>\r\n    <br>\r\n\r\n    <v-form @submit.prevent=\"creeNouveauHero\" v-if=display_button>\r\n      <v-text-field v-if=display_button :rules=\"heroRealNameRules\" v-model=\"heroRealName\" label=\"Vrai nom\"\r\n                    required></v-text-field>\r\n      <v-text-field\r\n          v-model=\"heroPublicName\"\r\n          :rules=\"heroPublicNameRules\"\r\n          label=\"Nom public\"\r\n          required\r\n      ></v-text-field>\r\n      <br>\r\n      <v-btn value=\"actions\" block class=\"mt-2\" @click=\"creeNouveauHero\">Ajouter</v-btn>\r\n    </v-form>\r\n\r\n    <br>\r\n    <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"teams\"\r\n        class=\"elevation-1\"\r\n    ></v-data-table>\r\n  </v-container>\r\n</template>\r\n<style>\r\nbody {\r\n  font-family: Helvetica Neue, Arial, sans-serif;\r\n  font-size: 14px;\r\n  color: #444;\r\n}\r\n\r\ntable {\r\n  border: 2px solid #42b983;\r\n  border-radius: 3px;\r\n  background-color: #fff;\r\n}\r\n\r\nth {\r\n  background-color: #42b983;\r\n  color: rgba(255, 255, 255, 0.66);\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\ntd {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\nth,\r\ntd {\r\n  min-width: 120px;\r\n  padding: 10px 20px;\r\n}\r\n\r\nth.active {\r\n  color: #fff;\r\n}\r\n\r\nth.active .arrow {\r\n  opacity: 1;\r\n}\r\n\r\ntable {\r\n  margin-left: 100px;\r\n  width: 80%;\r\n}\r\n</style>\r\n\r\n<script>\r\n\r\nimport {mapActions, mapState} from \"vuex\";\r\n\r\nexport default {\r\n  name: 'HeroesComponents',\r\n  data: () => ({\r\n    columns: [\"publicName\"],\r\n    items: {},\r\n    heroPublicName: \"\",\r\n    headers: [\r\n      { text: \"ID\", value: \"_id\" },\r\n      { text: \"Nom\", value: \"name\" }\r\n    ],\r\n    heroRealName: \"\",\r\n    display_button: false,\r\n    heroPublicNameRules: [\r\n      v => !!v || \"Un nom public de héro est requis\",\r\n    ],\r\n    heroRealNameRules: [\r\n      v => !!v || \"Un nom réel de héro est requis\",\r\n    ],\r\n  }),methods: {\r\n    ...mapActions([\"getListeHero\",\"registerHero\"]),\r\n    async creeNouveauHero() {\r\n      const hero = {\r\n        publicName: this.heroPublicName,\r\n        realName: this.heroRealName,\r\n      };\r\n      await this.registerHero(hero);\r\n      console.log(\"envoie2\")\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\"heroes\"]),\r\n  },\r\n  mounted() {\r\n    this.getListeHero();\r\n    //console.log(this.nomOrga , \"totot\")\r\n  }\r\n\r\n\r\n}\r\n\r\n</script>\r\n  \r\n  "],"mappings":"AAoFA,SAAAA,UAAA,EAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,OAAA;IACAC,KAAA;IACAC,cAAA;IACAC,OAAA,GACA;MAAAC,IAAA;MAAAC,KAAA;IAAA,GACA;MAAAD,IAAA;MAAAC,KAAA;IAAA,EACA;IACAC,YAAA;IACAC,cAAA;IACAC,mBAAA,GACAC,CAAA,MAAAA,CAAA,uCACA;IACAC,iBAAA,GACAD,CAAA,MAAAA,CAAA;EAEA;EAAAE,OAAA;IACA,GAAAf,UAAA;IACA,MAAAgB,gBAAA;MACA,MAAAC,IAAA;QACAC,UAAA,OAAAZ,cAAA;QACAa,QAAA,OAAAT;MACA;MACA,WAAAU,YAAA,CAAAH,IAAA;MACAI,OAAA,CAAAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAtB,QAAA;EACA;EACAuB,QAAA;IACA,KAAAC,YAAA;IACA;EACA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}