{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getRequest, postRequest, patchRequest } from '../service/axios.service';\nimport myaxios from '../service/axios.service';\nasync function getAlias() {\n  let result = {\n    error: 0,\n    status: 200,\n    data: null\n  };\n  let response = await axios.get('/heroes/getaliases');\n  if (response.error != 0) {\n    result.error = 1;\n    result.data = response.error;\n  }\n  return result;\n}\nasync function addHeroes() {\n  let result = {\n    error: 0,\n    status: 200,\n    data: null\n  };\n  let heroesToAdd = {\n    _id: \"id_team\",\n    publicName: \"...\",\n    realName: \"...\",\n    powers: [{\n      name: \"...\",\n      type: \"...\",\n      level: \"...\"\n    }, {\n      name: \"...\",\n      type: \"...\",\n      level: \"...\"\n    }]\n  };\n  let response = await axios.patch('/teams/addheroes', heroesToAdd);\n  if (response.error != 0) {\n    result.error = 1;\n    result.data = response.error;\n  }\n  return result;\n}\nasync function updateHeroes() {\n  let result = {\n    error: 0,\n    status: 200,\n    data: null\n  };\n  let heroesTomodifie = {\n    idHeroes: [\"id_toto\", \"id_tata\"],\n    idTeam: \"id_team\"\n  };\n  let response = await axios.put('/heroes/update', heroesToAdd, {\n    headers: \"teams's secret here\"\n  });\n  if (response.error != 0) {\n    result.error = 1;\n    result.data = response.error;\n  }\n  return result;\n}\nasync function getHeroesById(id) {\n  let result = {\n    error: 0,\n    status: 200,\n    data: null\n  };\n  let url = \"/heroes/getbyid/\" + id;\n  let response = await getRequest(url, {\n    headers: \"teams's secret here\"\n  });\n  if (response.error === 0) {\n    let heroes = [];\n    response.data.forEach(c => heroes.push(Heroes.fromAPI(c)));\n    result.data = heroes;\n  } else result = response;\n  return result;\n}","map":{"version":3,"names":["getRequest","postRequest","patchRequest","myaxios","getAlias","result","error","status","data","response","axios","get","addHeroes","heroesToAdd","_id","publicName","realName","powers","name","type","level","patch","updateHeroes","heroesTomodifie","idHeroes","idTeam","put","headers","getHeroesById","id","url","heroes","forEach","c","push","Heroes","fromAPI"],"sources":["C:/Users/valys/Documents/S4/Web/ProjetWeb/projet/src/service/heroes.service.js"],"sourcesContent":["import {getRequest ,postRequest  ,patchRequest} from '../service/axios.service'\r\nimport myaxios from '../service/axios.service'\r\n\r\nasync function getAlias() {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let response = await axios.get('/heroes/getaliases' )\r\n   if (response.error != 0) {\r\n      result.error=1 \r\n      result.data=response.error\r\n   }\r\n   return result\r\n}\r\n\r\nasync function addHeroes() {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let heroesToAdd = { _id:\"id_team\" ,publicName:  \"...\" , realName: \"...\" , powers: [ { name: \"...\" , type: \"...\" , level: \"...\" }, {name: \"...\" , type: \"...\" , level: \"...\" } ] }\r\n   let response = await axios.patch('/teams/addheroes', heroesToAdd )\r\n   if (response.error != 0) {\r\n      result.error=1 \r\n      result.data=response.error\r\n   }\r\n   return result\r\n}\r\n\r\nasync function updateHeroes() {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let heroesTomodifie = { idHeroes: [ \"id_toto\", \"id_tata\"], idTeam: \"id_team\"}\r\n   let response = await axios.put('/heroes/update', heroesToAdd ,{headers : \"teams's secret here\" })\r\n   if (response.error != 0) {\r\n      result.error=1 \r\n      result.data=response.error\r\n   }\r\n   return result\r\n}\r\n\r\n\r\nasync function getHeroesById(id ) {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let url = \"/heroes/getbyid/\" + id \r\n   let response = await getRequest(url, {headers : \"teams's secret here\" } )\r\n   if (response.error === 0) {\r\n       let heroes = []\r\n       response.data.forEach(c => heroes.push(Heroes.fromAPI(c)))\r\n       result.data =  heroes\r\n   }\r\n   else result = response\r\n   return result\r\n}\r\n "],"mappings":";AAAA,SAAQA,UAAU,EAAEC,WAAW,EAAGC,YAAY,QAAO,0BAA0B;AAC/E,OAAOC,OAAO,MAAM,0BAA0B;AAE9C,eAAeC,QAAQA,CAAA,EAAG;EACvB,IAAIC,MAAM,GAAG;IAACC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAI,CAAC;EAChD,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,oBAAoB,CAAE;EACrD,IAAIF,QAAQ,CAACH,KAAK,IAAI,CAAC,EAAE;IACtBD,MAAM,CAACC,KAAK,GAAC,CAAC;IACdD,MAAM,CAACG,IAAI,GAACC,QAAQ,CAACH,KAAK;EAC7B;EACA,OAAOD,MAAM;AAChB;AAEA,eAAeO,SAASA,CAAA,EAAG;EACxB,IAAIP,MAAM,GAAG;IAACC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAI,CAAC;EAChD,IAAIK,WAAW,GAAG;IAAEC,GAAG,EAAC,SAAS;IAAEC,UAAU,EAAG,KAAK;IAAGC,QAAQ,EAAE,KAAK;IAAGC,MAAM,EAAE,CAAE;MAAEC,IAAI,EAAE,KAAK;MAAGC,IAAI,EAAE,KAAK;MAAGC,KAAK,EAAE;IAAM,CAAC,EAAE;MAACF,IAAI,EAAE,KAAK;MAAGC,IAAI,EAAE,KAAK;MAAGC,KAAK,EAAE;IAAM,CAAC;EAAG,CAAC;EACjL,IAAIX,QAAQ,GAAG,MAAMC,KAAK,CAACW,KAAK,CAAC,kBAAkB,EAAER,WAAW,CAAE;EAClE,IAAIJ,QAAQ,CAACH,KAAK,IAAI,CAAC,EAAE;IACtBD,MAAM,CAACC,KAAK,GAAC,CAAC;IACdD,MAAM,CAACG,IAAI,GAACC,QAAQ,CAACH,KAAK;EAC7B;EACA,OAAOD,MAAM;AAChB;AAEA,eAAeiB,YAAYA,CAAA,EAAG;EAC3B,IAAIjB,MAAM,GAAG;IAACC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAI,CAAC;EAChD,IAAIe,eAAe,GAAG;IAAEC,QAAQ,EAAE,CAAE,SAAS,EAAE,SAAS,CAAC;IAAEC,MAAM,EAAE;EAAS,CAAC;EAC7E,IAAIhB,QAAQ,GAAG,MAAMC,KAAK,CAACgB,GAAG,CAAC,gBAAgB,EAAEb,WAAW,EAAE;IAACc,OAAO,EAAG;EAAsB,CAAC,CAAC;EACjG,IAAIlB,QAAQ,CAACH,KAAK,IAAI,CAAC,EAAE;IACtBD,MAAM,CAACC,KAAK,GAAC,CAAC;IACdD,MAAM,CAACG,IAAI,GAACC,QAAQ,CAACH,KAAK;EAC7B;EACA,OAAOD,MAAM;AAChB;AAGA,eAAeuB,aAAaA,CAACC,EAAE,EAAG;EAC/B,IAAIxB,MAAM,GAAG;IAACC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAI,CAAC;EAChD,IAAIsB,GAAG,GAAG,kBAAkB,GAAGD,EAAE;EACjC,IAAIpB,QAAQ,GAAG,MAAMT,UAAU,CAAC8B,GAAG,EAAE;IAACH,OAAO,EAAG;EAAsB,CAAC,CAAE;EACzE,IAAIlB,QAAQ,CAACH,KAAK,KAAK,CAAC,EAAE;IACtB,IAAIyB,MAAM,GAAG,EAAE;IACftB,QAAQ,CAACD,IAAI,CAACwB,OAAO,CAACC,CAAC,IAAIF,MAAM,CAACG,IAAI,CAACC,MAAM,CAACC,OAAO,CAACH,CAAC,CAAC,CAAC,CAAC;IAC1D5B,MAAM,CAACG,IAAI,GAAIuB,MAAM;EACzB,CAAC,MACI1B,MAAM,GAAGI,QAAQ;EACtB,OAAOJ,MAAM;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}