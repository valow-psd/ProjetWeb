{"ast":null,"code":"//import {getRequest ,postRequest  ,patchRequest} from '../service/axios.service'\nimport myaxios from '../service/axios.service';\n\n/*\r\nasync function getAllOrgs() {\r\n    let result = {error: 0, status: 200, data: null}\r\n    let response = await getRequest('/orgs/get', 'GETALLORGS')\r\n    if (response.error === 0) {\r\n        let orgs = []\r\n        response.data.forEach(c => orgs.push(Orgs.fromAPI(c)))\r\n        result.data = orgs\r\n    }\r\n    else result = response\r\n    return result\r\n }\r\n */\n\nexport const createOrganisation = org => {\n  return myaxios.post(\"orgs/create\", org);\n};\n\n/*\r\nasync function getOrgsById(id ) {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let url = \"/orgs/getbyid/\" + id \r\n   let response = await getRequest(url, {headers : \"teams's secret here\" } )\r\n   if (response.error === 0) {\r\n       let orgs = []\r\n       response.data.forEach(c => orgs.push(Orgs.fromAPI(c)))\r\n       result.data =  orgs\r\n   }\r\n   else result = response\r\n   return result\r\n}\r\n\nasync function addTeam() {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let TeamsToAdd = { idTeam: \"id_team\"}\r\n   let response = await myaxios.patch('/orgs/addteam', TeamsToAdd , {headers : \"teams's secret here\" } )\r\n   if (response.error != 0) {\r\n      result.error=1 \r\n      result.data=response.error\r\n   }\r\n   return result\r\n}\r\n\r\nasync function removeTeam() {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let TeamsToRemove = { idTeam: \"id_team\"}\r\n   let response = await myaxios.patch('/orgs/removeteam', TeamsToRemove , {headers : \"teams's secret here\" })\r\n   if (response.error != 0) {\r\n      result.error=1 \r\n      result.data=response.error\r\n   }\r\n   return result\r\n}\r\n*/","map":{"version":3,"names":["myaxios","createOrganisation","org","post"],"sources":["C:/Users/valys/Documents/S4/Web/ProjetWeb/projet/src/service/organisations.service.js"],"sourcesContent":["//import {getRequest ,postRequest  ,patchRequest} from '../service/axios.service'\r\nimport myaxios from '../service/axios.service'\r\n\r\n/*\r\nasync function getAllOrgs() {\r\n    let result = {error: 0, status: 200, data: null}\r\n    let response = await getRequest('/orgs/get', 'GETALLORGS')\r\n    if (response.error === 0) {\r\n        let orgs = []\r\n        response.data.forEach(c => orgs.push(Orgs.fromAPI(c)))\r\n        result.data = orgs\r\n    }\r\n    else result = response\r\n    return result\r\n }\r\n */\r\n \r\nexport const createOrganisation = (org) => {\r\n    return myaxios.post(\"orgs/create\", org);\r\n}\r\n \r\n /*\r\n async function getOrgsById(id ) {\r\n    let result = {error: 0, status: 200, data: null}\r\n    let url = \"/orgs/getbyid/\" + id \r\n    let response = await getRequest(url, {headers : \"teams's secret here\" } )\r\n    if (response.error === 0) {\r\n        let orgs = []\r\n        response.data.forEach(c => orgs.push(Orgs.fromAPI(c)))\r\n        result.data =  orgs\r\n    }\r\n    else result = response\r\n    return result\r\n }\r\n\r\n async function addTeam() {\r\n    let result = {error: 0, status: 200, data: null}\r\n    let TeamsToAdd = { idTeam: \"id_team\"}\r\n    let response = await myaxios.patch('/orgs/addteam', TeamsToAdd , {headers : \"teams's secret here\" } )\r\n    if (response.error != 0) {\r\n       result.error=1 \r\n       result.data=response.error\r\n    }\r\n    return result\r\n }\r\n \r\n async function removeTeam() {\r\n    let result = {error: 0, status: 200, data: null}\r\n    let TeamsToRemove = { idTeam: \"id_team\"}\r\n    let response = await myaxios.patch('/orgs/removeteam', TeamsToRemove , {headers : \"teams's secret here\" })\r\n    if (response.error != 0) {\r\n       result.error=1 \r\n       result.data=response.error\r\n    }\r\n    return result\r\n }\r\n */\r\n"],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,0BAA0B;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,GAAG,IAAK;EACvC,OAAOF,OAAO,CAACG,IAAI,CAAC,aAAa,EAAED,GAAG,CAAC;AAC3C,CAAC;;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}