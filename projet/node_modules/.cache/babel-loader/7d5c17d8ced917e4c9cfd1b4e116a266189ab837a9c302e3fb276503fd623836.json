{"ast":null,"code":"import { getRequest } from '../service/axios.service';\nimport myaxios from '../service/axios.service';\n/*\r\nasync function getAlias() {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let response = await myaxios.get('/heroes/getaliases' )\r\n   if (response.error != 0) {\r\n      result.error=1 \r\n      result.data=response.error\r\n   }\r\n   return result\r\n}\r\n*/\nexport const createHero = hero => {\n  return myaxios.post(\"heroes/getaliases\", hero);\n};\n/*\r\nasync function updateHeroes() {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let heroesTomodifie = { idHeroes: [ \"id_toto\", \"id_tata\"], idTeam: \"id_team\"}\r\n   let response = await myaxios.put('/heroes/update', heroesToAdd ,{headers : \"teams's secret here\" })\r\n   if (response.error != 0) {\r\n      result.error=1 \r\n      result.data=response.error\r\n   }\r\n   return result\r\n}\r\n\r\n\r\nasync function getHeroesById(id ) {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let url = \"/heroes/getbyid/\" + id \r\n   let response = await getRequest(url, {headers : \"teams's secret here\" } )\r\n   if (response.error === 0) {\r\n       let heroes = []\r\n       response.data.forEach(c => heroes.push(Heroes.fromAPI(c)))\r\n       result.data =  heroes\r\n   }\r\n   else result = response\r\n   return result\r\n}*/","map":{"version":3,"names":["getRequest","myaxios","createHero","hero","post"],"sources":["C:/Users/valys/Documents/S4/Web/ProjetWeb/projet/src/service/heroes.service.js"],"sourcesContent":["import {getRequest} from '../service/axios.service'\r\nimport myaxios from '../service/axios.service'\r\n/*\r\nasync function getAlias() {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let response = await myaxios.get('/heroes/getaliases' )\r\n   if (response.error != 0) {\r\n      result.error=1 \r\n      result.data=response.error\r\n   }\r\n   return result\r\n}\r\n*/\r\nexport const createHero = (hero) => {\r\n   return myaxios.post(\"heroes/getaliases\", hero);\r\n}\r\n/*\r\nasync function updateHeroes() {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let heroesTomodifie = { idHeroes: [ \"id_toto\", \"id_tata\"], idTeam: \"id_team\"}\r\n   let response = await myaxios.put('/heroes/update', heroesToAdd ,{headers : \"teams's secret here\" })\r\n   if (response.error != 0) {\r\n      result.error=1 \r\n      result.data=response.error\r\n   }\r\n   return result\r\n}\r\n\r\n\r\nasync function getHeroesById(id ) {\r\n   let result = {error: 0, status: 200, data: null}\r\n   let url = \"/heroes/getbyid/\" + id \r\n   let response = await getRequest(url, {headers : \"teams's secret here\" } )\r\n   if (response.error === 0) {\r\n       let heroes = []\r\n       response.data.forEach(c => heroes.push(Heroes.fromAPI(c)))\r\n       result.data =  heroes\r\n   }\r\n   else result = response\r\n   return result\r\n}*/\r\n "],"mappings":"AAAA,SAAQA,UAAU,QAAO,0BAA0B;AACnD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EACjC,OAAOF,OAAO,CAACG,IAAI,CAAC,mBAAmB,EAAED,IAAI,CAAC;AACjD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}